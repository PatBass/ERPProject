<?php

namespace KGC\ClientBundle\Repository;

use Doctrine\ORM\EntityRepository;
use KGC\Bundle\SharedBundle\Entity\Client;
use KGC\ClientBundle\Entity\IdAstro;
use KGC\Bundle\SharedBundle\Entity\Website;

/**
 * IdAstroRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IdAstroRepository extends EntityRepository
{
    /**
     * preventDuplicate : cherche si un idastro existe déjà pour un couple website/client et détermine quelle est la valeur la plus juste.
     * retourne l'objet client à insérer/modifier.
     *
     * @param \KGC\Bundle\SharedBundle\Entity\Client $client
     *
     * @return \KGC\Bundle\SharedBundle\Entity\Website $website
     */
    public function preventDuplicate($baseIdAstro, Client $client, Website $website, $valeur)
    {
        $cli_id = $client->getId();
        if (isset($cli_id)) {
            $query = $this->createQueryBuilder('i')
                    ->where('i.client= :client')
                        ->setParameter('client', $client)
                    ->andWhere('i.website = :website')
                        ->setParameter('website', $website)
                ->setMaxResults(1)
                    ;
            $result = $query->getQuery()
                            ->getOneOrNullResult();
        } else {
            $result = null;
        }
        
        if ($result) { // un idastro pour ce client et ce site web existe déjà
            // on le récupère et met à jour la valeur
            if (is_object($baseIdAstro) and $baseIdAstro !== $result) {
                $this->_em->detach($baseIdAstro);
            }
            if ($valeur !== null and $valeur > 0) {
                $result->setValeur($valeur);
            }

            return $result;
        } elseif (!empty($valeur)) { // aucun idastro trouvé mais la valeur n'est pas nulle
            // il faut créer un nouvel idastro.
            if (is_object($baseIdAstro)) {
                $this->_em->detach($baseIdAstro);
            }
            $idastro = new IdAstro();
            $idastro->create($client, $website, $valeur);
            $this->_em->persist($idastro);

            return $idastro;
        } else { // une entité idastro ne peut être créee, mettre à null
            return null;
        }
    }
}
